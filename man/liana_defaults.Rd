% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/liana_defaults.R
\name{liana_defaults}
\alias{liana_defaults}
\title{Function to pass Default Arguments for each method}
\usage{
liana_defaults(
  assay = "RNA",
  assay.type = "logcounts",
  expr_prop = 0.1,
  seed = 1004,
  complex_policy = "mean0",
  parallelize = FALSE,
  workers = 8,
  permutation.params = NULL,
  liana_pipe.params = NULL,
  liana_call.params = NULL,
  cellphonedb.params = NULL,
  natmi.params = NULL,
  sca.params = NULL,
  connectome.params = NULL,
  cytotalk.params = NULL,
  logfc.params = NULL,
  cellchat.params = NULL,
  squidpy.params = NULL,
  call_sca.params = NULL,
  call_natmi.params = NULL,
  call_connectome.params = NULL,
  call_italk.params = NULL
)
}
\arguments{
\item{assay}{Assay name passed to `call_italk`, `call_sca`, `call_cellchat`,
and `call_connectome`}

\item{assay.type}{- the type of data to be used to calculate the means
(logcounts by default), available options are: "counts" and "logcounts"}

\item{expr_prop}{minimum proportion of gene expression per cell type (0.1 by default).
Note that when working with complexes, the minimum subunit proportion will
be used for filtering.}

\item{seed}{random seed integer}

\item{complex_policy}{policy how to account for the presence of complexes.}

\item{parallelize}{whether to parallelize cellphonedb-like}

\item{workers}{number of workers to be called}

\item{permutation.params}{list of parameters passed to permutation methods}

\item{liana_pipe.params}{list of Parameters passed to NATMI \code{\link{liana_pipe}}}

\item{liana_call.params}{list of Parameters passed to NATMI \code{\link{liana_call}}}

\item{cellphonedb.params}{list of Parameters passed to liana's internal
cellphonedb implementation \code{\link{cellphonedb_score}}}

\item{natmi.params}{list of Parameters passed to liana's internal
edge_specificity implementation \code{\link{natmi_score}}}

\item{sca.params}{list of Parameters passed to liana's internal
LRScore implementation \code{\link{sca_score}}}

\item{connectome.params}{list of Parameters passed to liana's internal
connectome's weight_sc implementation \code{\link{connectome_score}}}

\item{cytotalk.params}{list of Parameters passed to liana's internal
crosstalk scores implementation \code{\link{cytotalk_score}}}

\item{logfc.params}{list of Parameters passed to liana's internal
logFC implementation \code{\link{logfc_score}}}

\item{cellchat.params}{list of Parameters passed to CellChat \code{\link{call_cellchat}}}

\item{squidpy.params}{list of Parameters passed to Squidpy \code{\link{call_squidpy}}}

\item{call_sca.params}{list of Parameters passed to SingleCellSignalR \code{\link{call_sca}}}

\item{call_natmi.params}{list of Parameters passed to NATMI \code{\link{call_natmi}}}

\item{call_connectome.params}{list of Parameters passed to Connectome \code{\link{call_connectome}}}

\item{call_italk.params}{list of Parameters passed to iTALK \code{\link{call_italk}}}
}
\value{
A list of the default parameters for each method
}
\description{
Function to pass Default Arguments for each method
}
\details{
The default parameters for each method can also be overwritten by
 manually passing a list of parameters for the appropraite method
  \code{\link{liana_wrap}}

Further, each `get_*` method will by default obtain the default params passed
   via \code{\link{liana_pipe}} and \code{\link{liana_call}}. This is done so that most steps
   required for the calculation of these methods are undertaken only once.

NB! LIANA's internal methods are made consistent. There is no reason to pass
specific parameters to any of them. Thus, it is best that one sticks to the
non-nested parameters of this function (i.e. excluding `.params`),
unless a very specific reason requires any of LIANA's internal parameters
to be changed.
}
\examples{
liana_path <- system.file(package = "liana")
# load testdata
testdata <- readRDS(file.path(liana_path , "testdata", "input", "testdata.rds"))
# get a `named` list with all default parameters passed to liana.
def_params <- liana_defaults()
# any of these can then be overwritten and passed to `...` in `liana_wrap`
# with the `.params` suffix to the parameter name type. For example,
liana_res <- liana_wrap(testdata,
                        permutation.params = list(nperms=2),
                        liana_pipe.params = list(test.type='wilcox'))
}
