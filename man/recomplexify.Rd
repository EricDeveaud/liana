% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/liana_recomplexify.R
\name{recomplexify}
\alias{recomplexify}
\title{Helper function to account for complexes in the resources}
\usage{
recomplexify(lr_res, columns, ...)
}
\arguments{
\item{columns}{columns to account for complexes for (obtained via the `ScoreSpecifics` class)}

\item{lr_cmplx}{decomplexified* lr_res}

\item{complex_policy}{policy how to account for the presence of complexes.
Following the example of \href{https://github.com/Teichlab/cellphonedb}{CellPhoneDB}
   valid options are: `'mean'` (default): mean of the subunits, and select
   the subunit with the change/expression closest to 0 (when working with expression)

One could choose to do any other type of mean: geometric, TriMean, etc.}
}
\value{
complex-accounted lr_res, with both complex and subunit genesymbols
}
\description{
Helper function to account for complexes in the resources
}
\details{
to be passed before the relevant score_calc function;
* decomplexified refers to complexes being broken into subunits which are then
 treated as seperate entities and re-assembled into complexes (or 'recomplexified')
 by this function

Note that we call `account_missing` function to assign any complex with missing subunits's
relevant columns, and expression proportion to 0. This then results in the whole
complex being either filter or considered as non-expressed.
}
