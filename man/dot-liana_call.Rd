% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/liana_call.R
\name{.liana_call}
\alias{.liana_call}
\title{Function to obtain scores via liana}
\usage{
.liana_call(
  method,
  seurat_object,
  op_resource,
  decomplexify = TRUE,
  lr_res = NULL,
  protein = "complex",
  complex_policy = "min0",
  ...
)
}
\arguments{
\item{seurat_object}{Seurat object}

\item{op_resource}{resource tibble obtained via \link{liana::select_resource}}

\item{decomplexify}{whether to dissociate complexes into subunits and hence
and hence take complexes into account (decomplexify) or not}

\item{lr_res}{ligand-receptor DE results and other stats between clusters}

\item{protein}{whether to return complexes ('complex') or protein subunits
('protein')}

\item{complex_policy}{policy how to account for the presence of complexes.
Following the example of \link[https://squidpy.readthedocs.io/en/stable/api/squidpy.gr.ligrec.html]{Squidpy} valid options are:
`'min0'`: select the subunit with the change/expression closest to 0 (as in CellPhoneDB)
`'all'`: returns all subunits separately; or any other base or user-defined function that reduces a vector to a single number (e.g. mean, min, etc)}

\item{...}{
  Arguments passed on to \code{\link[=liana_pipe]{liana_pipe}}
  \describe{
    \item{\code{test.type}}{`test.type` passed to \link{scran::findMarkers}}
    \item{\code{pval.type}}{`pval.type` passed to \link{scran::findMarkers}}
    \item{\code{seed}}{Set Random Seed}
  }}
}
\value{
lr_res modified to be method-specific
}
\description{
Function to obtain scores via liana
}
